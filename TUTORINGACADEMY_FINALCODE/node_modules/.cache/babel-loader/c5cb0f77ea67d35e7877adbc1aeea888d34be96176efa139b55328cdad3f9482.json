{"ast":null,"code":"var _jsxFileName = \"/Users/rikitapatangay/tutoringacademy-react/src/components/reserveTutorscr.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReserveTutorsPage() {\n  _s();\n  const [tutors, setTutors] = useState([]);\n  const [selectedTutorId, setSelectedTutorId] = useState(null);\n  const [reservationSuccess, setReservationSuccess] = useState(false);\n\n  // Fetch tutor data from API on component mount\n  useEffect(() => {\n    fetch('https://x4g0ddpp1f.execute-api.us-east-2.amazonaws.com/prod/show/tutors').then(response => response.json()).then(data => setTutors(data));\n  }, []);\n\n  // Handler for when a tutor is selected\n  const handleTutorSelect = tutorId => {\n    setSelectedTutorId(tutorId);\n  };\n\n  // Handler for creating a reservation\n  const handleCreateReservation = () => {\n    // Make sure a tutor has been selected\n    if (!selectedTutorId) {\n      alert('Please select a tutor first.');\n      return;\n    }\n\n    // Format reservation data\n    const reservationData = {\n      tutor_id: selectedTutorId,\n      student_id: 2,\n      date: '2023-04-31',\n      subject_id: 1,\n      time: '1:00',\n      duration: '1',\n      status: 'Incomplete'\n    };\n\n    // Send reservation data to API\n    fetch('https://x4g0ddpp1f.execute-api.us-east-2.amazonaws.com/prod/Create/reservations', {\n      method: 'POST',\n      body: JSON.stringify({\n        body: reservationData\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setReservationSuccess(true);\n      setSelectedTutorId(null);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select a tutor to reserve:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), tutors.map(tutor => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: tutor.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTutorSelect(tutor.id),\n        children: \"Select Tutor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, tutor.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)), selectedTutorId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Tutor:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: tutors.find(tutor => tutor.id === selectedTutorId).name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateReservation,\n        children: \"Reserve Tutor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), reservationSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Reservation created successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(ReserveTutorsPage, \"AQXCu+Nnd3t6v2vSZt2ZfLZdPPM=\");\n_c = ReserveTutorsPage;\nexport default ReserveTutorsPage;\nvar _c;\n$RefreshReg$(_c, \"ReserveTutorsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ReserveTutorsPage","_s","tutors","setTutors","selectedTutorId","setSelectedTutorId","reservationSuccess","setReservationSuccess","fetch","then","response","json","data","handleTutorSelect","tutorId","handleCreateReservation","alert","reservationData","tutor_id","student_id","date","subject_id","time","duration","status","method","body","JSON","stringify","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tutor","name","onClick","id","find","_c","$RefreshReg$"],"sources":["/Users/rikitapatangay/tutoringacademy-react/src/components/reserveTutorscr.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction ReserveTutorsPage() {\n  const [tutors, setTutors] = useState([]);\n  const [selectedTutorId, setSelectedTutorId] = useState(null);\n  const [reservationSuccess, setReservationSuccess] = useState(false);\n\n  // Fetch tutor data from API on component mount\n  useEffect(() => {\n    fetch('https://x4g0ddpp1f.execute-api.us-east-2.amazonaws.com/prod/show/tutors')\n      .then(response => response.json())\n      .then(data => setTutors(data));\n  }, []);\n\n  // Handler for when a tutor is selected\n  const handleTutorSelect = (tutorId) => {\n    setSelectedTutorId(tutorId);\n  }\n\n  // Handler for creating a reservation\n  const handleCreateReservation = () => {\n    // Make sure a tutor has been selected\n    if (!selectedTutorId) {\n      alert('Please select a tutor first.');\n      return;\n    }\n\n    // Format reservation data\n    const reservationData = {\n      tutor_id: selectedTutorId,\n      student_id: 2,\n      date: '2023-04-31',\n      subject_id: 1,\n      time: '1:00',\n      duration: '1',\n      status: 'Incomplete'\n    };\n\n    // Send reservation data to API\n    fetch('https://x4g0ddpp1f.execute-api.us-east-2.amazonaws.com/prod/Create/reservations', {\n      method: 'POST',\n      body: JSON.stringify({ body: reservationData }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        setReservationSuccess(true);\n        setSelectedTutorId(null);\n      });\n  }\n\n  return (\n    <div>\n      <h1>Select a tutor to reserve:</h1>\n      {tutors.map(tutor => (\n        <div key={tutor.id}>\n          <h2>{tutor.name}</h2>\n          <button onClick={() => handleTutorSelect(tutor.id)}>Select Tutor</button>\n        </div>\n      ))}\n      {selectedTutorId && (\n        <div>\n          <h2>Selected Tutor:</h2>\n          <p>{tutors.find(tutor => tutor.id === selectedTutorId).name}</p>\n          <button onClick={handleCreateReservation}>Reserve Tutor</button>\n        </div>\n      )}\n      {reservationSuccess && (\n        <p>Reservation created successfully!</p>\n      )}\n    </div>\n  );\n}\n\nexport default ReserveTutorsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}