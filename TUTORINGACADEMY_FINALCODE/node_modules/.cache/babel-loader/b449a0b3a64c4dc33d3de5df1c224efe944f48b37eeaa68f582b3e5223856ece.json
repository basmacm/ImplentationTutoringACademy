{"ast":null,"code":"var _jsxFileName = \"/Users/rikitapatangay/tutoringacademy-react/src/components/reserveTutorscr.js\",\n  _s = $RefreshSig$();\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport { InputLabel } from '@mui/material';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport axios from 'axios';\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\nfunction MultipleSelect() {\n  _s();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName(\n    // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n  const [tutorNames, setTutorNames] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  //UseEffect(), useMemo(), Async/Await, Promises, 'let' for global variable, IIFE, types of function declerations, class components (componentDidMount, componentWillMount)\n  var alternativeSubjects = null;\n  useEffect(() => {\n    const retrieveData = async () => {\n      const resp = await axios.get('https://x4g0ddpp1f.execute-api.us-east-2.amazonaws.com/prod/show/tutors/');\n      console.log(\"Tutor Info (dropdown): \" + JSON.stringify(resp.data.body[0]));\n      alternativeSubjects = resp.data.subjects;\n      setTutorNames(resp);\n      setLoading(false);\n    };\n    retrieveData();\n  }, []);\n  let tutorNames_list = [];\n  if (loading == false) {\n    for (var i = 0; i < tutorNames.data.body.length; i++) {\n      tutorNames_list[i] = tutorNames.data.body[i].first_name + \" \" + tutorNames.data.body[i].last_name;\n    }\n    console.log(tutorNames_list.toString());\n  }\n  let uniqueTutorList = [...new Set(tutorNames_list)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-multiple-name-label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-multiple-name-label\",\n        id: \"demo-multiple-name\",\n        value: personName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 18\n        }, this),\n        MenuProps: MenuProps,\n        children: uniqueTutorList.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name,\n          style: getStyles(name, personName, theme),\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(MultipleSelect, \"Xa+wGenoep7NbYGNln67Md7a2oc=\", false, function () {\n  return [useTheme];\n});\n_c = MultipleSelect;\nexport default MultipleSelect;\nvar _c;\n$RefreshReg$(_c, \"MultipleSelect\");","map":{"version":3,"names":["useTheme","OutlinedInput","InputLabel","MenuItem","FormControl","Select","axios","React","useState","useMemo","useEffect","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelect","_s","setPersonName","handleChange","event","target","value","split","tutorNames","setTutorNames","loading","setLoading","alternativeSubjects","retrieveData","resp","get","console","log","JSON","stringify","data","body","subjects","tutorNames_list","i","length","first_name","last_name","toString","uniqueTutorList","Set","children","sx","m","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","onChange","input","label","map","_c","$RefreshReg$"],"sources":["/Users/rikitapatangay/tutoringacademy-react/src/components/reserveTutorscr.js"],"sourcesContent":["\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport { InputLabel } from '@mui/material';\n\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport axios from 'axios';\nimport React, { useState, useMemo, useEffect } from 'react';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nfunction MultipleSelect() {\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  const [tutorNames, setTutorNames] = useState([ ]);\n  const [loading, setLoading] = useState(true);\n\n      //UseEffect(), useMemo(), Async/Await, Promises, 'let' for global variable, IIFE, types of function declerations, class components (componentDidMount, componentWillMount)\n      var alternativeSubjects = null;\n    useEffect( () => {\n    const retrieveData = async () => {\n        const resp = await axios.get('https://x4g0ddpp1f.execute-api.us-east-2.amazonaws.com/prod/show/tutors/');\n        console.log(\"Tutor Info (dropdown): \" + JSON.stringify(resp.data.body[0]));\n        alternativeSubjects = resp.data.subjects;\n        setTutorNames(resp);\n        setLoading(false);\n    }\n\n    retrieveData();\n}, []);\n    let tutorNames_list = [];\n    if(loading == false) {\n        \n        for(var i = 0; i < tutorNames.data.body.length; i++) {\n            tutorNames_list[i] = tutorNames.data.body[i].first_name + \" \" + tutorNames.data.body[i].last_name;\n        }\n\n        console.log(tutorNames_list.toString());\n    }\n    let uniqueTutorList = [...new Set(tutorNames_list)];\n\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-name-label\">Name</InputLabel>\n        <Select\n          labelId=\"demo-multiple-name-label\"\n          id=\"demo-multiple-name\"\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Name\" />}\n          MenuProps={MenuProps}\n        >\n          {uniqueTutorList.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default MultipleSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}