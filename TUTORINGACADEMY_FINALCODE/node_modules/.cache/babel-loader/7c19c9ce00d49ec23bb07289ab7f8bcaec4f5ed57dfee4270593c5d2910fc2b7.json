{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TutorCard from './components/TutorCard';\nimport \"./Favoritesscr.css\";\nfunction FavoritesPage() {\n  _s();\n  const [tutors, setTutors] = useState([]);\n  const [favoriteTutors, setFavoriteTutors] = useState([]);\n  const [showFavorites, setShowFavorites] = useState(false);\n  useEffect(() => {\n    fetchTutors();\n  }, []);\n  const fetchTutors = async () => {\n    try {\n      const response = await axios.get(\"https://x4g0ddpp1f.execute-api.us-east-2.amazonaws.com/prod/show/tutors\");\n      const apiTutors = response.data.body.map(tutor => ({\n        id: tutor.tutor_id,\n        name: `${tutor.first_name} ${tutor.last_name}`,\n        subject: tutor.subject,\n        grade: tutor.grade,\n        isFavorite: false\n      }));\n      setTutors(apiTutors);\n    } catch (error) {\n      console.error(\"Error fetching tutors:\", error);\n    }\n  };\n  const handleFavorite = tutorId => {\n    const updatedTutors = tutors.map(tutor => {\n      if (tutor.id === tutorId) {\n        tutor.isFavorite = !tutor.isFavorite;\n        return tutor;\n      }\n      return tutor;\n    });\n    setTutors(updatedTutors);\n    const updatedFavorites = updatedTutors.filter(tutor => tutor.isFavorite);\n    setFavoriteTutors(updatedFavorites);\n  };\n  const toggleShowFavorites = () => {\n    setShowFavorites(!showFavorites);\n  };\n}\n_s(FavoritesPage, \"YpnIZB4ccwk5m2Wz3NaEd2okKEo=\");\n_c = FavoritesPage;\nexport default FavoritesPage;\nvar _c;\n$RefreshReg$(_c, \"FavoritesPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","TutorCard","FavoritesPage","_s","tutors","setTutors","favoriteTutors","setFavoriteTutors","showFavorites","setShowFavorites","fetchTutors","response","get","apiTutors","data","body","map","tutor","id","tutor_id","name","first_name","last_name","subject","grade","isFavorite","error","console","handleFavorite","tutorId","updatedTutors","updatedFavorites","filter","toggleShowFavorites","_c","$RefreshReg$"],"sources":["/Users/rikitapatangay/tutoringacademy-react/src/components/Favoritesscr.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport TutorCard from './components/TutorCard';\n\n\nimport \"./Favoritesscr.css\"\n\n\n\n\nfunction FavoritesPage() {\n    const [tutors, setTutors] = useState([]);\n    const [favoriteTutors, setFavoriteTutors] = useState([]);\n    const [showFavorites, setShowFavorites] = useState(false);\n  \n    useEffect(() => {\n      fetchTutors();\n    }, []);\n  \n    const fetchTutors = async () => {\n      try {\n        const response = await axios.get(\n          \"https://x4g0ddpp1f.execute-api.us-east-2.amazonaws.com/prod/show/tutors\"\n        );\n        const apiTutors = response.data.body.map((tutor) => ({\n          id: tutor.tutor_id,\n          name: `${tutor.first_name} ${tutor.last_name}`,\n          subject: tutor.subject,\n          grade: tutor.grade,\n          isFavorite: false,\n        }));\n        setTutors(apiTutors);\n      } catch (error) {\n        console.error(\"Error fetching tutors:\", error);\n      }\n    };\n  \n    const handleFavorite = (tutorId) => {\n      const updatedTutors = tutors.map((tutor) => {\n        if (tutor.id === tutorId) {\n          tutor.isFavorite = !tutor.isFavorite;\n          return tutor;\n        }\n        return tutor;\n      });\n      setTutors(updatedTutors);\n  \n      const updatedFavorites = updatedTutors.filter((tutor) => tutor.isFavorite);\n      setFavoriteTutors(updatedFavorites);\n    };\n  \n    const toggleShowFavorites = () => {\n      setShowFavorites(!showFavorites);\n    };\n  \n    \n}\n\nexport default FavoritesPage;\n\n\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,wBAAwB;AAG9C,OAAO,oBAAoB;AAK3B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACdW,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAC9B,yEAAyE,CAC1E;MACD,MAAMC,SAAS,GAAGF,QAAQ,CAACG,IAAI,CAACC,IAAI,CAACC,GAAG,CAAEC,KAAK,KAAM;QACnDC,EAAE,EAAED,KAAK,CAACE,QAAQ;QAClBC,IAAI,EAAG,GAAEH,KAAK,CAACI,UAAW,IAAGJ,KAAK,CAACK,SAAU,EAAC;QAC9CC,OAAO,EAAEN,KAAK,CAACM,OAAO;QACtBC,KAAK,EAAEP,KAAK,CAACO,KAAK;QAClBC,UAAU,EAAE;MACd,CAAC,CAAC,CAAC;MACHpB,SAAS,CAACQ,SAAS,CAAC;IACtB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAME,cAAc,GAAIC,OAAO,IAAK;IAClC,MAAMC,aAAa,GAAG1B,MAAM,CAACY,GAAG,CAAEC,KAAK,IAAK;MAC1C,IAAIA,KAAK,CAACC,EAAE,KAAKW,OAAO,EAAE;QACxBZ,KAAK,CAACQ,UAAU,GAAG,CAACR,KAAK,CAACQ,UAAU;QACpC,OAAOR,KAAK;MACd;MACA,OAAOA,KAAK;IACd,CAAC,CAAC;IACFZ,SAAS,CAACyB,aAAa,CAAC;IAExB,MAAMC,gBAAgB,GAAGD,aAAa,CAACE,MAAM,CAAEf,KAAK,IAAKA,KAAK,CAACQ,UAAU,CAAC;IAC1ElB,iBAAiB,CAACwB,gBAAgB,CAAC;EACrC,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChCxB,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;AAGL;AAACL,EAAA,CA9CQD,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AAgDtB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}